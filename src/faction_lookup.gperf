/* cyberfeeder - An Android: Netrunner deckbuilder
 * Copyright (C) 2013  Jack Kelly <jack@jackkelly.name>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

%{
#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include "card.h"

#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wmissing-field-initializers"
#endif
%}
%struct-type
%ignore-case
%includes
%define hash-function-name faction_lookup_hash
%define lookup-function-name faction_lookup_in_word_set
struct entry { const char* name; enum faction value; };
%%
anarch,          RUNNER_ANARCH
criminal,        RUNNER_CRIMINAL
shaper,          RUNNER_SHAPER
runner_neutral,  RUNNER_NEUTRAL
haas-bioroid,    CORP_HAAS_BIOROID
jinteki,         CORP_JINTEKI
nbn,             CORP_NBN
weyland,         CORP_WEYLAND
corp_neutral,    CORP_NEUTRAL
%%
gboolean faction_lookup(const char *name, enum faction *result) {
  struct entry *faction = faction_lookup_in_word_set(name, strlen(name));
  if (faction == NULL) return FALSE;
  *result = faction->value;
  return TRUE;
}
